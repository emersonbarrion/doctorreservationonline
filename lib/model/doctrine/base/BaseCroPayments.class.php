<?php

/**
 * BaseCroPayments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $reservationid
 * @property string $token
 * @property double $amount
 * @property string $transactionid
 * @property string $transactiontype
 * @property string $firstname
 * @property string $lastname
 * @property string $countrycode
 * @property string $email
 * @property string $payerid
 * @property integer $rate
 * @property string $ordertime
 * @property double $feeamount
 * @property double $taxamount
 * @property string $paymenttype
 * @property string $paymentstatus
 * @property string $currencycode
 * @property string $ack
 * @property CroReservations $CroReservations
 * 
 * @method integer         getReservationid()   Returns the current record's "reservationid" value
 * @method string          getToken()           Returns the current record's "token" value
 * @method double          getAmount()          Returns the current record's "amount" value
 * @method string          getTransactionid()   Returns the current record's "transactionid" value
 * @method string          getTransactiontype() Returns the current record's "transactiontype" value
 * @method string          getFirstname()       Returns the current record's "firstname" value
 * @method string          getLastname()        Returns the current record's "lastname" value
 * @method string          getCountrycode()     Returns the current record's "countrycode" value
 * @method string          getEmail()           Returns the current record's "email" value
 * @method string          getPayerid()         Returns the current record's "payerid" value
 * @method integer         getRate()            Returns the current record's "rate" value
 * @method string          getOrdertime()       Returns the current record's "ordertime" value
 * @method double          getFeeamount()       Returns the current record's "feeamount" value
 * @method double          getTaxamount()       Returns the current record's "taxamount" value
 * @method string          getPaymenttype()     Returns the current record's "paymenttype" value
 * @method string          getPaymentstatus()   Returns the current record's "paymentstatus" value
 * @method string          getCurrencycode()    Returns the current record's "currencycode" value
 * @method string          getAck()             Returns the current record's "ack" value
 * @method CroReservations getCroReservations() Returns the current record's "CroReservations" value
 * @method CroPayments     setReservationid()   Sets the current record's "reservationid" value
 * @method CroPayments     setToken()           Sets the current record's "token" value
 * @method CroPayments     setAmount()          Sets the current record's "amount" value
 * @method CroPayments     setTransactionid()   Sets the current record's "transactionid" value
 * @method CroPayments     setTransactiontype() Sets the current record's "transactiontype" value
 * @method CroPayments     setFirstname()       Sets the current record's "firstname" value
 * @method CroPayments     setLastname()        Sets the current record's "lastname" value
 * @method CroPayments     setCountrycode()     Sets the current record's "countrycode" value
 * @method CroPayments     setEmail()           Sets the current record's "email" value
 * @method CroPayments     setPayerid()         Sets the current record's "payerid" value
 * @method CroPayments     setRate()            Sets the current record's "rate" value
 * @method CroPayments     setOrdertime()       Sets the current record's "ordertime" value
 * @method CroPayments     setFeeamount()       Sets the current record's "feeamount" value
 * @method CroPayments     setTaxamount()       Sets the current record's "taxamount" value
 * @method CroPayments     setPaymenttype()     Sets the current record's "paymenttype" value
 * @method CroPayments     setPaymentstatus()   Sets the current record's "paymentstatus" value
 * @method CroPayments     setCurrencycode()    Sets the current record's "currencycode" value
 * @method CroPayments     setAck()             Sets the current record's "ack" value
 * @method CroPayments     setCroReservations() Sets the current record's "CroReservations" value
 * 
 * @package    courtreservationonline
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCroPayments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cro_payments');
        $this->hasColumn('reservationid', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('amount', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('transactionid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('transactiontype', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('countrycode', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('payerid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('rate', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ordertime', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('feeamount', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('taxamount', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('paymenttype', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('paymentstatus', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('currencycode', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ack', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CroReservations', array(
             'local' => 'reservationid',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}