<?php

/**
 * BaseCroPayments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $reservationid
 * @property double $rate
 * @property date $payment_date
 * @property string $payment_type
 * @property CroReservations $CroReservations
 * 
 * @method integer         getReservationid()   Returns the current record's "reservationid" value
 * @method double          getRate()            Returns the current record's "rate" value
 * @method date            getPaymentDate()     Returns the current record's "payment_date" value
 * @method string          getPaymentType()     Returns the current record's "payment_type" value
 * @method CroReservations getCroReservations() Returns the current record's "CroReservations" value
 * @method CroPayments     setReservationid()   Sets the current record's "reservationid" value
 * @method CroPayments     setRate()            Sets the current record's "rate" value
 * @method CroPayments     setPaymentDate()     Sets the current record's "payment_date" value
 * @method CroPayments     setPaymentType()     Sets the current record's "payment_type" value
 * @method CroPayments     setCroReservations() Sets the current record's "CroReservations" value
 * 
 * @package    courtreservationonline
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCroPayments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cro_payments');
        $this->hasColumn('reservationid', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rate', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('payment_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('payment_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CroReservations', array(
             'local' => 'reservationid',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}