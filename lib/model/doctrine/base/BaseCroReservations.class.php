<?php

/**
 * BaseCroReservations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $userid
 * @property integer $courtid
 * @property date $start_date
 * @property date $end_date
 * @property timestamp $start_time
 * @property timestamp $end_time
 * @property boolean $status
 * @property string $payment_status
 * @property CroUsers $CroUsers
 * @property CroCourts $CroCourts
 * @property Doctrine_Collection $CroPayments
 * 
 * @method integer             getUserid()         Returns the current record's "userid" value
 * @method integer             getCourtid()        Returns the current record's "courtid" value
 * @method date                getStartDate()      Returns the current record's "start_date" value
 * @method date                getEndDate()        Returns the current record's "end_date" value
 * @method timestamp           getStartTime()      Returns the current record's "start_time" value
 * @method timestamp           getEndTime()        Returns the current record's "end_time" value
 * @method boolean             getStatus()         Returns the current record's "status" value
 * @method string              getPaymentStatus()  Returns the current record's "payment_status" value
 * @method CroUsers            getCroUsers()       Returns the current record's "CroUsers" value
 * @method CroCourts           getCroCourts()      Returns the current record's "CroCourts" value
 * @method Doctrine_Collection getCroPayments()    Returns the current record's "CroPayments" collection
 * @method CroReservations     setUserid()         Sets the current record's "userid" value
 * @method CroReservations     setCourtid()        Sets the current record's "courtid" value
 * @method CroReservations     setStartDate()      Sets the current record's "start_date" value
 * @method CroReservations     setEndDate()        Sets the current record's "end_date" value
 * @method CroReservations     setStartTime()      Sets the current record's "start_time" value
 * @method CroReservations     setEndTime()        Sets the current record's "end_time" value
 * @method CroReservations     setStatus()         Sets the current record's "status" value
 * @method CroReservations     setPaymentStatus()  Sets the current record's "payment_status" value
 * @method CroReservations     setCroUsers()       Sets the current record's "CroUsers" value
 * @method CroReservations     setCroCourts()      Sets the current record's "CroCourts" value
 * @method CroReservations     setCroPayments()    Sets the current record's "CroPayments" collection
 * 
 * @package    courtreservationonline
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCroReservations extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cro_reservations');
        $this->hasColumn('userid', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('courtid', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('payment_status', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 0,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CroUsers', array(
             'local' => 'userid',
             'foreign' => 'id'));

        $this->hasOne('CroCourts', array(
             'local' => 'courtid',
             'foreign' => 'id'));

        $this->hasMany('CroPayments', array(
             'local' => 'id',
             'foreign' => 'reservationid'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}